<p id="notice"><%= notice %></p>

<h1>Houses</h1>

<p>
  Houses is the model we're using for a cache-persisted multi-step form that also implements Turbo
  Frames to create a really nice SPA-like experience. Since we're using cache persistence we won't
  need to worry about partial objects in the database, the ActiveRecord/DB Record will only be created
  once the full wizard has been completed.
</p>
<p>
  The only downside here is that it requires Rails Cache to be enabled during development, which isn't
  necessarily the most "Railsy" thing — your cache should ultimately be dispensible and your application
  should work 100% functionally without it — it should purely be a transparent performance booster for the
  Rails app. Manifesting application logic (even if it's just letting consumers 'borrow' a little cache
  space for their mid-wizard form fields) into the Rails cache is generally frowned upon. While not
  technically breaking MVC since we're not persisting a model via the cache, the dependency on the cache
  for the system to operate properly has a notable impact. Please take time to assess that impact for your
  specific use-case.
</p>
<hr/>

<table>
  <thead>
    <tr>
      <th>Address</th>
      <th>Exterior color</th>
      <th>Interior color</th>
      <th>Current family last name</th>
      <th>Rooms</th>
      <th>Square feet</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @houses.each do |house| %>
      <tr>
        <td><%= house.address %></td>
        <td><%= house.exterior_color %></td>
        <td><%= house.interior_color %></td>
        <td><%= house.current_family_last_name %></td>
        <td><%= house.rooms %></td>
        <td><%= house.square_feet %></td>
        <td><%= link_to 'Show', house %></td>
        <td><%= link_to 'Edit', edit_house_path(house) %></td>
        <td><%= link_to 'Destroy', house, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New House', new_house_path %>

<hr style="margin-top: 20px;"/>

<details style="margin-top: 20px;">
<summary>House Model Code (Click to see)</summary>
<pre>
<code class="language-ruby">
<%= render plain: File.read(Rails.root.join('app', 'models', 'house.rb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>House Routes Code (Click to see)</summary>
<pre>
<code class="language-ruby">
resources :houses
resources :build_house, only: [:update, :show], controller: 'steps_controllers/house_steps'
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Houses Controller Code (Click to see) (Mostly vanilla Rails scaffold)</summary>
<pre>
<code class="language-ruby">
<%= render plain: File.read(Rails.root.join('app', 'controllers', 'houses_controller.rb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>House Steps Controller Code (Click to see)</summary>
<pre>
<code class="language-ruby">
<%= render plain: File.read(Rails.root.join('app', 'controllers', 'steps_controllers', 'house_steps_controller.rb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Wizard Step 1 View Code (Click to see)</summary>
<pre>
<code class="language-erb">
<%= render plain: File.read(Rails.root.join('app', 'views', 'steps_controllers', 'house_steps', 'address_info.html.erb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Wizard Step 2 View Code (Click to see)</summary>
<pre>
<code class="language-erb">
<%= render plain: File.read(Rails.root.join('app', 'views', 'steps_controllers', 'house_steps', 'house_info.html.erb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Wizard Step 3 View Code (Click to see)</summary>
<pre>
<code class="language-erb">
<%= render plain: File.read(Rails.root.join('app', 'views', 'steps_controllers', 'house_steps', 'house_stats.html.erb')).strip! %>
</code>
</pre>
</details>
