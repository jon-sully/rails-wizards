<p id="notice"><%= notice %></p>

<h1>Computers</h1>

<p>
  Computers are the 'final' iteration of wizards with database persistence. They give a live example
  of using database-persistence along with a default_scope (and other scopes) to give the application
  a more <i>normalized</i> use of the Model's base-level query interface throughout the rest of the
  application. With this strategy, any time I call a Computer.first I can be sure that the record I'll
  get is one that has completed all of the necessary form steps, not a partially-complete record.
</p>
<hr/>

<table>
  <thead>
    <tr>
      <th>Manufacturer</th>
      <th>Year started</th>
      <th>Model</th>
      <th>Processor</th>
      <th>Graphics chip</th>
      <th>Exterior color</th>
      <th>Weight</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @computers.each do |computer| %>
      <tr>
        <td><%= computer.manufacturer %></td>
        <td><%= computer.year_started %></td>
        <td><%= computer.model %></td>
        <td><%= computer.processor %></td>
        <td><%= computer.graphics_chip %></td>
        <td><%= computer.exterior_color %></td>
        <td><%= computer.weight %></td>
        <td><%= link_to 'Show', computer %></td>
        <td><%= link_to 'Edit', edit_computer_path(computer) %></td>
        <td><%= link_to 'Destroy', computer, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Computer', new_computer_path %>

<hr style="margin-top: 20px;"/>

<details style="margin-top: 20px;">
<summary>Computer Model Code (Click to see)</summary>
<pre>
<code class="language-ruby">
<%= render plain: File.read(Rails.root.join('app', 'models', 'computer.rb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Computer Routes Code (Click to see)</summary>
<pre>
<code class="language-ruby">
resources :computers do
  resources :steps, only: [:show, :update], controller: 'steps_controllers/computer_steps'
end
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Computers Controller Code (Click to see) (Mostly vanilla Rails scaffold)</summary>
<pre>
<code class="language-ruby">
<%= render plain: File.read(Rails.root.join('app', 'controllers', 'computers_controller.rb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Computer Steps Controller Code (Click to see)</summary>
<pre>
<code class="language-ruby">
<%= render plain: File.read(Rails.root.join('app', 'controllers', 'steps_controllers', 'computer_steps_controller.rb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Wizard Step 1 View Code (Click to see)</summary>
<pre>
<code class="language-erb">
<%= render plain: File.read(Rails.root.join('app', 'views', 'steps_controllers', 'computer_steps', 'maker_details.html.erb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Wizard Step 2 View Code (Click to see)</summary>
<pre>
<code class="language-erb">
<%= render plain: File.read(Rails.root.join('app', 'views', 'steps_controllers', 'computer_steps', 'internals.html.erb')).strip! %>
</code>
</pre>
</details>

<details style="margin-top: 20px;">
<summary>Wizard Step 3 View Code (Click to see)</summary>
<pre>
<code class="language-erb">
<%= render plain: File.read(Rails.root.join('app', 'views', 'steps_controllers', 'computer_steps', 'externals.html.erb')).strip! %>
</code>
</pre>
</details>
